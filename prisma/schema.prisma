// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id               String              @id @db.Uuid
  email            String              @unique
  password         String
  name             String
  lastName         String              @map("last_name")
  documentType     String              @map("document_type")
  betBalance       Float               @default(0) @map("bet_balance")
  documentNumber   String              @map("document_number")
  idUserSubs       String?             @map("id_user_subs") @db.Uuid
  phone            String?
  photo            String?
  byUser           String              @map("by_user") @db.Uuid
  isEnabled        Boolean             @default(true)
  createdAt        DateTime            @default(now()) @map("created_at")
  updatedAt        DateTime            @updatedAt @map("updated_at")
  UserSuscriptions UserSubscriptions[]
  HistoryBalance   HistoryBalance[]
  UserHouse        UserHouse[]

  @@map("users")
}

model HistoryBalance {
  id        String             @id @db.Uuid
  idUser    String             @map("id_user") @db.Uuid
  amount    Float
  type      HistoryBalanceType
  byUser    String             @map("by_user") @db.Uuid
  createdAt DateTime           @default(now()) @map("created_at")
  updatedAt DateTime           @updatedAt @map("updated_at")
  Users     Users              @relation(fields: [idUser], references: [id])

  @@map("history_balance")
}

model SubscriptionTypes {
  id               String              @id @db.Uuid
  name             String
  keyName          String              @map("key_name")
  description      String
  price            Float
  isEnabled        Boolean             @default(true)
  byUser           String              @map("by_user") @db.Uuid
  createdAt        DateTime            @default(now()) @map("created_at")
  updatedAt        DateTime            @updatedAt @map("updated_at")
  UserSuscriptions UserSubscriptions[]

  @@map("subscription_types")
}

model UserSubscriptions {
  id               String            @id @db.Uuid
  idUser           String            @map("id_user") @db.Uuid
  idSubscription   String            @map("id_suscription") @db.Uuid
  startDate        DateTime          @map("start_date")
  endDate          DateTime?         @map("end_date")
  isActive         Boolean           @default(true) @map("is_active")
  paymentInfo      Json              @default("{}") @map("payment_info") @db.Json
  isEnabled        Boolean           @default(true)
  byUser           String            @map("by_user") @db.Uuid
  createdAt        DateTime          @default(now()) @map("created_at")
  updatedAt        DateTime          @updatedAt @map("updated_at")
  SuscriptionTypes SubscriptionTypes @relation(fields: [idSubscription], references: [id])
  Users            Users             @relation(fields: [idUser], references: [id])

  @@index([idUser])
  @@index([idSubscription])
  @@index([isEnabled])
  @@map("user_suscriptions")
}

model BettingType {
  id          String   @id @db.Uuid
  name        String
  keyName     String   @map("key_name")
  description String
  isEnabled   Boolean  @default(true)
  byUser      String   @map("by_user") @db.Uuid
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  House       House[]

  @@map("betting_type")
}

model House {
  id            String      @id @db.Uuid
  name          String
  keyName       String      @map("key_name")
  configuration Json        @default("{}") @map("configuration") @db.Json
  idBettingType String      @map("id_betting_type") @db.Uuid
  description   String
  isEnabled     Boolean     @default(true)
  byUser        String      @map("by_user") @db.Uuid
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  BettingType   BettingType @relation(fields: [idBettingType], references: [id])
  UserHouse     UserHouse[]

  @@map("house")
}

model UserHouse {
  id        String        @id @db.Uuid
  idUser    String        @map("id_user") @db.Uuid
  idHouse   String        @map("id_house") @db.Uuid
  type      UserHouseType
  isEnabled Boolean       @default(true)
  byUser    String        @map("by_user") @db.Uuid
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")
  House     House         @relation(fields: [idHouse], references: [id])
  Users     Users         @relation(fields: [idUser], references: [id])

  @@index([idUser])
  @@index([idHouse])
  @@index([isEnabled])
  @@map("user_house")
}

enum HistoryBalanceType {
  DEPOSIT
  WITHDRAW
}

enum UserHouseType {
  ADMIN
  USER
}
